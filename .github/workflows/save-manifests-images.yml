name: Save Manifests Images

on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: 'The version of release'
        type: string
        required: true
        default: ''
      ENABLE_ADDONS:
        description: 'Enable save addon images (e.g. apecloud-mysql|clickhouse|elasticsearch|kafka|mongodb|mysql|oceanbase|postgresql|qdrant|rabbitmq|redis|starrocks|zookeeper|damengdb|kingbase)'
        type: string
        required: false
        default: 'false'
      ENABLE_ARM64:
        description: 'Release ARM64 images'
        type: string
        required: false
        default: 'false'

run-name: save images ${{ inputs.RELEASE_VERSION }} addon:${{ inputs.ENABLE_ADDONS }} arm:${{ inputs.ENABLE_ARM64 }}

permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  MANIFESTS_FILE: "apecloud/manifests/deploy-manifests.yaml"
  VALUES_FILE: "apecloud/manifests/deploy-values.yaml"

jobs:
  check-manifests-image:
    uses: ./.github/workflows/manifests-image-check.yml
    with:
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
    secrets: inherit

  check-manifests-charts-image:
    uses: ./.github/workflows/manifests-charts-image-check.yml
    with:
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
    secrets: inherit

  save-cloud-images:
    if: ${{ inputs.ENABLE_ARM64 == 'false' }}
    needs: [ check-manifests-image, check-manifests-charts-image ]
    uses: ./.github/workflows/manifests-images-save.yml
    with:
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
      IS_ADDON: "false"
    secrets: inherit

  save-cloud-images-arm:
    if: ${{ inputs.ENABLE_ARM64 == 'true' }}
    needs: [ check-manifests-image, check-manifests-charts-image ]
    uses: ./.github/workflows/manifests-images-save-arm64.yml
    with:
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
      IS_ADDON: "false"
    secrets: inherit

  get-enbale-addons:
    needs: [ check-manifests-image, check-manifests-charts-image ]
    if: ${{ inputs.ENABLE_ADDONS != 'false' && inputs.ENABLE_ADDONS != '' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get_addons_name.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: get version
        if: ${{ inputs.ENABLE_ADDONS == 'true' }}
        id: get-version
        run: |
          RELEASE_VERSION="${{ inputs.RELEASE_VERSION }}"
          if [[ "${RELEASE_VERSION}" != "v"* ]]; then
              RELEASE_VERSION="v${RELEASE_VERSION}"
          fi
          echo "release-version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - name: Checkout apecloud Code
        if: ${{ inputs.ENABLE_ADDONS == 'true' }}
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud
          path: apecloud
          token: ${{ env.GITHUB_TOKEN }}
          ref: ${{ steps.get-version.outputs.release-version }}

      - name: get addons name
        id: get_addons_name
        run: |
          ADDONS_NAME=""
          ENABLE_ADDONS="${{ inputs.ENABLE_ADDONS }}"
          MANIFESTS_FILE="${{ env.MANIFESTS_FILE }}"
          ENABLE_ARM64="${{ inputs.ENABLE_ARM64 }}"
          VALUES_FILE="${{ env.VALUES_FILE }}"
          if [[ "${ENABLE_ADDONS}" == "true" ]]; then
              ADDONS_NAME="$(bash .github/scripts/get_manifests_addons.sh "${MANIFESTS_FILE}" "${VALUES_FILE}" "${ENABLE_ARM64}")"
          else
              for addons_name in $( echo "${ENABLE_ADDONS}" | sed 's/|/ /g'); do
                  if [[ "${ENABLE_ARM64}" == "true" && ("${addons_name}" == "goldendb" || "${addons_name}" == "rocketmq") ]]; then
                      continue
                  fi
          
                  if [[ -z "$ADDONS_NAME" ]]; then
                      ADDONS_NAME="{\"addon-name\":\"$addons_name\"}"
                  else
                      ADDONS_NAME="$ADDONS_NAME,{\"addon-name\":\"$addons_name\"}"
                  fi
              done
          fi
          echo "matrix={\"include\":[$ADDONS_NAME]}" >> $GITHUB_OUTPUT

  save-addon-images:
    if: ${{ inputs.ENABLE_ARM64 == 'false' }}
    needs: [ get-enbale-addons ]
    uses: ./.github/workflows/manifests-images-save-addons.yml
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-enbale-addons.outputs.matrix) }}
    with:
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
      ENABLE_ADDONS: "${{ matrix.addon-name }}"
    secrets: inherit

  save-addon-images-arm64:
    if: ${{ inputs.ENABLE_ARM64 == 'true' }}
    needs: [ get-enbale-addons ]
    uses: ./.github/workflows/manifests-images-save-addons-arm64.yml
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-enbale-addons.outputs.matrix) }}
    with:
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
      ENABLE_ADDONS: "${{ matrix.addon-name }}"
    secrets: inherit

  send-message:
    permissions:
      id-token: write
      contents: read
    needs: [ check-manifests-image, check-manifests-charts-image ]
    if: ${{ failure() || cancelled() }}
    uses: apecloud-inc/apecloud-cd/.github/workflows/feishui-message.yml@v0.1.0
    with:
      TYPE: "2"
      BOT_TYPE: "package"
      CONTENT: "save images ${{ inputs.RELEASE_VERSION }} error"
    secrets: inherit
