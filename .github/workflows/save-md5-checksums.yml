name: Save MD5 Checksums

on:
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'release version'
        required: false
        default: ''


run-name: upload md5 checksums ${{ inputs.VERSION }}

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  OSS_KEY_ID: ${{ secrets.OSS_KEY_ID }}
  OSS_KEY_SECRET: ${{ secrets.OSS_KEY_SECRET }}
  OSS_ENDPOINT: "oss-cn-zhangjiakou.aliyuncs.com"
  OSS_BUCKET: "kubeblocks-oss"
  CHECKSUM_MD5: "checksums.md5"

jobs:
  upload-md5-checksums:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ref ${{ inputs.VERSION }}
        if: ${{ inputs.VERSION != '' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.VERSION }}

      - name: Checkout Ref ${{ github.ref_name }}
        if: ${{ inputs.VERSION == '' }}
        uses: actions/checkout@v4

      - uses: manyuanrong/setup-ossutil@v2.0
        with:
          access-key-id: "${{ env.OSS_KEY_ID }}"
          access-key-secret: "${{ env.OSS_KEY_SECRET }}"
          endpoint: "${{ env.OSS_ENDPOINT }}"

      - name: get md5 version
        id: get_md5_version
        run: |
          MD5_VERSION=""
          RELEASE_VERSION="${{ inputs.VERSION }}"
          if [[ -n "${RELEASE_VERSION}" ]]; then
              major=${RELEASE_VERSION%%.*}
              minor_patch=${RELEASE_VERSION#*.}
              minor=${minor_patch%%.*}
              MD5_VERSION="$major.$minor"
          else
              REF_NAME="${{ github.ref_name }}"
              if [[ "${REF_NAME}" == "release-"* ]]; then 
                  MD5_VERSION="${REF_NAME/release-/v}"
              fi
          fi
          echo "MD5_VERSION:${MD5_VERSION}"
          echo 'md5_version='${MD5_VERSION} >> $GITHUB_OUTPUT

      - name: Upload md5 checksums to oss
        run: |
          CHECKSUM_MD5_TMP="${{ env.CHECKSUM_MD5 }}"
          bash .github/scripts/generate_image_md5.sh "${CHECKSUM_MD5_TMP}"
          CHECKSUM_MD5="${CHECKSUM_MD5_TMP}"
          
          MD5_VERSION="${{ steps.get_md5_version.outputs.md5_version }}"
          if [[ -n "${MD5_VERSION}" ]]; then
              CHECKSUM_MD5="checksums-${MD5_VERSION}.md5"
          fi
          
          if [[ -f "${CHECKSUM_MD5_TMP}" ]]; then
              if [[ "${CHECKSUM_MD5_TMP}" != "${CHECKSUM_MD5}" ]]; then
                  echo "copy ${CHECKSUM_MD5_TMP} to ${CHECKSUM_MD5}"
                  cp -r ${CHECKSUM_MD5_TMP} ${CHECKSUM_MD5}
              fi
          else
              echo "$(tput -T xterm setaf 1)${CHECKSUM_MD5_TMP} file not exists$(tput -T xterm sgr0)"
              exit 1
          fi
          
          OSS_URL="oss://${{ env.OSS_BUCKET }}/images/md5/${CHECKSUM_MD5}"
          ossutil cp -rf ./${CHECKSUM_MD5} ${OSS_URL}
          upload_ret=$?
          if [[ $upload_ret -eq 0 ]]; then
              echo "upload ${CHECKSUM_MD5} to oss successfully"
          else
              exit 1
          fi 

      - name: Upload md5 checksums ${{ inputs.VERSION }} to oss
        if: ${{ inputs.VERSION != '' }}
        run: |
          RELEASE_VERSION="${{ inputs.VERSION }}"
          CHECKSUM_MD5="checksums-${RELEASE_VERSION}.md5"
          CHECKSUM_MD5_TMP="${{ env.CHECKSUM_MD5 }}"
          if [[ "${CHECKSUM_MD5_TMP}" != "${CHECKSUM_MD5}" ]]; then
              echo "copy ${CHECKSUM_MD5_TMP} to ${CHECKSUM_MD5}"
              cp -r ${CHECKSUM_MD5_TMP} ${CHECKSUM_MD5}
          fi
          
          OSS_URL="oss://${{ env.OSS_BUCKET }}/images/md5/${CHECKSUM_MD5}"
          ossutil cp -rf ./${CHECKSUM_MD5} ${OSS_URL}
          upload_ret=$?
          if [[ $upload_ret -eq 0 ]]; then
              echo "upload ${CHECKSUM_MD5} to oss successfully"
          else
              exit 1
          fi 

  save-result:
    runs-on: ubuntu-latest
    needs: [ upload-md5-checksums ]
    if: ${{ always() && inputs.VERSION != '' }}
    outputs:
      chart-pkg-name: ${{ steps.save_result.outputs.chart_pkg_name }}
      save-result: ${{ steps.save_result.outputs.save_result }}
    steps:
      - name: save result
        id: save_result
        run: |
          SAVE_RESULT="error"
          RELEASE_VERSION="${{ inputs.VERSION }}"
          CHART_PKG_NAME="checksums-${RELEASE_VERSION}.md5"
          if [[ "${{ needs.upload-md5-checksums.result }}" == "success" ]]; then
              SAVE_RESULT="success"
              CHART_PKG_NAME="http://kubeblocks-oss.${{ env.OSS_ENDPOINT }}/images/md5/${CHART_PKG_NAME}"
          fi
          echo 'save_result='$SAVE_RESULT >> $GITHUB_OUTPUT
          echo 'chart_pkg_name='${CHART_PKG_NAME} >> $GITHUB_OUTPUT

  send-message:
    permissions:
      id-token: write
      contents: read
    needs: [ save-result ]
    if: ${{ always() && inputs.VERSION != '' }}
    uses: apecloud-inc/apecloud-cd/.github/workflows/feishui-message.yml@v0.1.0
    with:
      TYPE: "2"
      CONTENT: "save md5 checksums ${{ needs.save-result.outputs.chart-pkg-name }} ${{ needs.save-result.outputs.save-result }}"
    secrets: inherit

  push-md5-checksums:
    runs-on: ubuntu-latest
    needs: [ save-result ]
    if: ${{ inputs.VERSION != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: download md5 checksums
        id: download_md5_checksums
        run: |
          RELEASE_VERSION="${{ inputs.VERSION }}"
          major=${RELEASE_VERSION%%.*}
          minor_patch=${RELEASE_VERSION#*.}
          minor=${minor_patch%%.*}
          MD5_VERSION="$major.$minor"
          echo "MD5_VERSION:${MD5_VERSION}"
          CHECKSUM_MD5="checksums-${MD5_VERSION}.md5"
          
          MD5_CHECKSUMS_URL="${{ needs.save-result.outputs.chart-pkg-name }}"
          if [[ -n "${MD5_CHECKSUMS_URL}" ]]; then
              for i in {1..5}; do
                  wget "${MD5_CHECKSUMS_URL}"
                  download_ret=$?
                  if [[ $download_ret -eq 0 && -f ${CHECKSUM_MD5} ]]; then
                      echo "$(tput -T xterm setaf 2)download ${CHECKSUM_MD5} success$(tput -T xterm sgr0)"
                  fi
                  sleep 1
              done
          fi
          
          MD5_DIR="./docs/md5"
          mkdir -p ${MD5_DIR}
          CHECKSUM_MD5_PATH="${MD5_DIR}/${CHECKSUM_MD5}"
          cp -r ${CHECKSUM_MD5} ${CHECKSUM_MD5_PATH}
          if [[ -f "${CHECKSUM_MD5_PATH}" ]]; then
              git add ${CHECKSUM_MD5_PATH}
          fi
          
          commit_message="chore: generate md5 checksums ${RELEASE_VERSION}"
          FILE_CHANGES=`git diff --name-only ${{ github.sha }}`
          if [[ -n "$FILE_CHANGES" ]]; then
              echo $FILE_CHANGES
              git config --local user.name "$GITHUB_ACTOR"
              git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
              git commit -a -m "${commit_message}"
          fi
          echo file_changes=$FILE_CHANGES >> $GITHUB_OUTPUT

      - name: push md5 checksums
        if: ${{ steps.download_md5_checksums.outputs.file_changes && inputs.VERSION != '' }}
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
          github_token: ${{ env.GITHUB_TOKEN }}
